[
{
"5E40E418": "stack_op(push(X), Stack, [X|Stack]).\nstack_op(pop, [X|Rest], Rest).\nstack_op(dup, [X|Rest], [X, X|Rest]).\nstack_op(swap, [X, Y|Rest], [Y, X|Rest]).\nstack_op(over, [X, Y|Rest], [Y, X, Y|Rest]).\nstack_op(rot, [X, Y, Z|Rest], [Y, Z, X|Rest]).\nstack_op(sort, Stack, SortedStack) :-\n    (   length(Stack, Len), Len >= 3\n    ->  get_top_n(Stack, 3, Elements, RestStack),\n        insertion_sort(Elements, SortedElements),\n        append(SortedElements, RestStack, SortedStack)\n    ;   SortedStack = Stack\n    ).\nget_top_n(Stack, N, Elements, Rest) :-\n    length(Elements, N),\n    append(Elements, Rest, Stack).\ninsertion_sort(List, Sorted) :-\n    insertion_sort(List, [], Sorted).\ninsertion_sort([], Acc, Acc).\ninsertion_sort([X|Xs], Acc, Sorted) :-\n    insert(X, Acc, NewAcc),\n    insertion_sort(Xs, NewAcc, Sorted).\ninsert(X, [], [X]).\ninsert(X, [Y|Ys], [X, Y|Ys]) :- X =< Y.\ninsert(X, [Y|Ys], [Y|Zs]) :- X > Y, insert(X, Ys, Zs)."
}
]