System: You are a coding assistant. You should use the available tools to complete the task.
Human: You are an expert programmer proficient in Problog and DeepProbLog. Your task is to generate the complete code based on the user's requirements in each <langda> block.
<Code>

% UAV properties
initial_charge ~ normal(90, 5).
charge_cost ~ normal(-0.1, 0.2).
weight ~ normal(0.2, 0.1).
% Weather conditions
1/10::fog; 9/10::clear.
% Visual line of sight
vlos(X) :-
 fog, distance(X, operator) < 50;
 clear, distance(X, operator) < 100;
 clear, over(X, bay), distance(X, operator) < 400.
% Sufficient charge to return to operator
can_return(X) :-
 B is initial_charge, O is charge_cost,
 D is distance(X, operator), 0 < B + (2 * O * D).
sensitive_section(X) :-
 
<Langda> Information:
<HASH> Hash tag of code: D729E529 </HASH>
<Requirements>only stay at the north of the bomb. </Requirements></Langda>
.
security(X) :-
 vlos(X),
 sensitive_section(X).
% Permits related to local features
permits(X) :- 
 distance(X, service) < 15; distance(X, primary) < 15;
 distance(X, secondary) < 10; distance(X, tertiary) < 5;
 distance(X, crossing) < 5; distance(X, rail) < 5;
 over(X, park).
% Definition of a valid mission
landscape(X) :- 
 security(X), weight < 25, can_return(X); 
 permits(X), can_return(X).

</Code>

<Final_Answer> The generated completed code should be formatted as follows:
// other contents
```problog
//the completed original code here
```
</Final_Answer>


AI: 

**split**


In section <origin_code> and <generated_code> you will be give two codes,
- in <origin_code> there's incomplete code with <langda> blocks.
- in <generated_code> there's completed code of <origin_code>.
your task is to extract and format each code block in <generated_code> that corresponds to the <langda> blocks in <origin_code>
<origin_code>

% UAV properties
initial_charge ~ normal(90, 5).
charge_cost ~ normal(-0.1, 0.2).
weight ~ normal(0.2, 0.1).
% Weather conditions
1/10::fog; 9/10::clear.
% Visual line of sight
vlos(X) :-
 fog, distance(X, operator) < 50;
 clear, distance(X, operator) < 100;
 clear, over(X, bay), distance(X, operator) < 400.
% Sufficient charge to return to operator
can_return(X) :-
 B is initial_charge, O is charge_cost,
 D is distance(X, operator), 0 < B + (2 * O * D).
sensitive_section(X) :-
 
<Langda> Information:
<HASH> Hash tag of code: D729E529 </HASH>
<Requirements>only stay at the north of the bomb. </Requirements></Langda>
.
security(X) :-
 vlos(X),
 sensitive_section(X).
% Permits related to local features
permits(X) :- 
 distance(X, service) < 15; distance(X, primary) < 15;
 distance(X, secondary) < 10; distance(X, tertiary) < 5;
 distance(X, crossing) < 5; distance(X, rail) < 5;
 over(X, park).
% Definition of a valid mission
landscape(X) :- 
 security(X), weight < 25, can_return(X); 
 permits(X), can_return(X).

</origin_code>
<generated_code>

% UAV properties
initial_charge ~ normal(90, 5).
charge_cost ~ normal(-0.1, 0.2).
weight ~ normal(0.2, 0.1).
% Weather conditions
1/10::fog; 9/10::clear.
% Visual line of sight
vlos(X) :-
    fog, distance(X, operator) < 50;
    clear, distance(X, operator) < 100;
    clear, over(X, bay), distance(X, operator) < 400.
% Sufficient charge to return to operator
can_return(X) :-
    B is initial_charge, O is charge_cost,
    D is distance(X, operator), 0 < B + (2 * O * D).
sensitive_section(X) :-
    north_of(X, bomb).
security(X) :-
    vlos(X),
    sensitive_section(X).
% Permits related to local features
permits(X) :- 
    distance(X, service) < 15; distance(X, primary) < 15;
    distance(X, secondary) < 10; distance(X, tertiary) < 5;
    distance(X, crossing) < 5; distance(X, rail) < 5;
    over(X, park).
% Definition of a valid mission
landscape(X) :- 
    security(X), weight < 25, can_return(X); 
    permits(X), can_return(X).

<generated_code>
<Final_Answer>
For each code block, extract it and format it in the following JSON format, please remove all code comments:

```problog
{"HASH": "XXXX1234","Code": "Completed code snippet 1"}
```
```problog
{"HASH": "XXXX3456","Code": "Completed code snippet 2"}
```

If there's no corresponding code exist:
```problog
{"HASH": "XXXX7890","Code": ""}
```
</Final_Answer>