[
{
"418D2062": "% Base case: an empty list or a single-element list is already sorted\nmerge_sort([], []).\nmerge_sort([X], [X]).\n\n% Recursive case: split the list, sort each half, and merge the results\nmerge_sort(List, Sorted) :-\n    length(List, Len),\n    Len > 1,\n    split(List, Left, Right),\n    merge_sort(Left, SortedLeft),\n    merge_sort(Right, SortedRight),\n    merge(SortedLeft, SortedRight, Sorted).\n\n% Split the list into two halves\nsplit([], [], []).\nsplit([X], [X], []).\nsplit([X, Y | Rest], [X | Left], [Y | Right]) :-\n    split(Rest, Left, Right).\n\n% Merge two sorted lists into one sorted list\nmerge([], Right, Right).\nmerge(Left, [], Left).\nmerge([X | LeftRest], [Y | RightRest], [X | Merged]) :-\n    X =< Y,\n    merge(LeftRest, [Y | RightRest], Merged).\nmerge([X | LeftRest], [Y | RightRest], [Y | Merged]) :-\n    X > Y,\n    merge([X | LeftRest], RightRest, Merged)."
}
]