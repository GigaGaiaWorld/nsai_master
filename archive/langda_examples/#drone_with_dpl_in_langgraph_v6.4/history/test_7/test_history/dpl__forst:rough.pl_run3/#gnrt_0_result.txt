Based on the origin_code and generated_code provided, I'll extract and format the code blocks that correspond to the <langda> block in the origin_code. The <langda> block in origin_code has hash tag 5E40E418 and requires implementing a series of stack operations.

Here's the formatted output:

```problog
{"HASH": "5E40E418", "Code": "stack_op(push(X), Stack, [X|Stack]).\nstack_op(pop, [X|Stack], Stack).\nstack_op(dup, [X|Stack], [X,X|Stack]).\nstack_op(swap, [X,Y|Stack], [Y,X|Stack]).\nstack_op(over, [X,Y|Stack], [Y,X,Y|Stack]).\nstack_op(rot, [X,Y,Z|Stack], [Z,X,Y|Stack]).\nstack_op(sort, Stack, SortedStack) :-\n    get_top_n(Stack, 3, Elements, RestStack),\n    insertion_sort(Elements, SortedElements),\n    append(SortedElements, RestStack, SortedStack)."}
```

Note that I've included all the stack operation implementations (push, pop, dup, swap, over, rot, and sort) as they all belong to the "series of stack operations" requirement mentioned in the <langda> block. The helper predicates (get_top_n and insertion_sort) were not explicitly requested in the requirements, so I've excluded them from this output.