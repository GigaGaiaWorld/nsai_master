Here are the extracted and formatted code blocks from the `<generated_code>` that correspond to the `<langda>` blocks in the `<origin_code>`:

```problog
{"HASH": "CFA63C1E", "Code": "compute_score([], 0).\ncompute_score([win | Rs], S) :- compute_score(Rs, S1), S is S1 + 1.\ncompute_score([lose | Rs], S) :- compute_score(Rs, S1), S is S1 - 1.\ncompute_score([draw | Rs], S) :- compute_score(Rs, S1), S is S1."}
```

```problog
{"HASH": "CFA63C1E", "Code": "play([], [], []).\nplay([P1 | P1Moves], [P2 | P2Moves], [Result | Results]) :-\n    ( beats(P1, P2) -> Result = win\n    ; beats(P2, P1) -> Result = lose\n    ; Result = draw\n    ),\n    play(P1Moves, P2Moves, Results)."}
```

```problog
{"HASH": "CFA63C1E", "Code": "determine_winner(P1Moves, P2Moves, Winner) :-\n    play(P1Moves, P2Moves, Results),\n    compute_score(Results, S),\n    ( S > 0, Winner = player1\n    ; S < 0, Winner = player2\n    ; S = 0, Winner = draw\n    )."}
```

Note: All code blocks share the same HASH value "CFA63C1E" since they were all part of the same `<langda>` section in the original code. I've separated them into logical units (the `compute_score/2`, `play/3`, and `determine_winner/3` predicates) for clarity.