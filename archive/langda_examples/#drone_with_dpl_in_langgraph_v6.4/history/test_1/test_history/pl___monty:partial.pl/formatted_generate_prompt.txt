System: You are a helpful assistant that helps the user to generate deepproblog code.
Human: You are an expert programmer proficient in Problog and DeepProbLog. Your task is to generate the complete code based on the user's requirements in each <langda> block.
<Code>
% Based on Monty Hall problem on https://github.com/friguzzi/cplint
1/3::prize(1) ; 1/3::prize(2) ; 1/3::prize(3).
select_door(1).
member(X,[X|T]).
member(X,[H|T]) :- member(X,T).
0.5::open_door(A) ; 0.5::open_door(B) :-
 
<Langda> Information of 1st Placeholder:
<HASH> Hash tag of code: C5B4A895 </HASH>
<LLM> Requirements of Rules: When both unselected doors are empty (no prize), open one of them randomly. </LLM></Langda>
.
open_door(A) :-
 
<Langda> Information of 2nd Placeholder:
<HASH> Hash tag of code: 338175EC </HASH>
<LLM> Requirements of Rules: When one unselected door has no prize and the other unselected door has a prize, the host will definitely open the door without a prize. </LLM></Langda>
.
win_keep :-
 
<Langda> Information of 3rd Placeholder:
<HASH> Hash tag of code: B73E5085 </HASH>
<LLM> Requirements of Rules: The winning condition of keeping the original gate strategy: the original gate has a prize </LLM></Langda>
.
win_switch :-
 member(A, [1,2,3]),
 \+ select_door(A),
 prize(A),
 \+ open_door(A).
query(prize(_)).
query(select_door(_)).
query(win_keep).
query(win_switch).
</Code>
<Final_Answer>
Please generate each code in JSON form for each code block using a single problog block of the following form:

For the first Code:
```problog 
{
    "HASH": "[Use the exact HASH provided in the requirements for first code]",
    "Code": "// Your fixed code here"
}
```

For the second Code:
```problog 
{
    "HASH": "[Use the exact HASH provided in the requirements for second code]",
    "Code": "// Your fixed code here"
}
``` 
