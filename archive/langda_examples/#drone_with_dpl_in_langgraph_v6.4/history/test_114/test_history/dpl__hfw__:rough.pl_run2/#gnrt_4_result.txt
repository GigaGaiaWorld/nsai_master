Here are the extracted and formatted code blocks from the `<generated_code>` that correspond to the `<langda>` blocks in `<origin_code>`:

```problog
{"HASH": "190031BC", "Code": "parse([N], N).\nparse(Expr, Result) :-\n    split_lowest_precedence(Expr, Left, Op, Right),\n    parse(Left, LeftResult),\n    parse(Right, RightResult),\n    apply_operator(Op, LeftResult, RightResult, Result)."}
```

```problog
{"HASH": "190031BC", "Code": "split_lowest_precedence(Expr, Left, Op, Right) :-\n    find_operator(Expr, Op, Index),\n    split_at(Expr, Index, Left, Right).\n\nfind_operator([H|T], Op, Index) :-\n    find_operator(T, Op, 1, Index).\n\nfind_operator([Op|_], Op, Index, Index) :-\n    operator_precedence(Op, _).\nfind_operator([_|T], Op, CurrentIndex, Index) :-\n    NextIndex is CurrentIndex + 1,\n    find_operator(T, Op, NextIndex, Index).\n\noperator_precedence(*, 2).\noperator_precedence(/, 2).\noperator_precedence(+, 3).\noperator_precedence(-, 3).\n\nsplit_at(List, Index, Left, Right) :-\n    length(Left, Index),\n    append(Left, Right, List).\n\napply_operator(+, A, B, Result) :- Result is A + B.\napply_operator(-, A, B, Result) :- Result is A - B.\napply_operator(*, A, B, Result) :- Result is A * B.\napply_operator(/, A, B, Result) :- Result is A / B."}
```

Note: I've maintained the same HASH value "190031BC" for both code blocks since they both belong to the same logical unit that was originally marked with that hash in the `<origin_code>`. The first block contains the main `parse/2` predicate, and the second block contains all the supporting predicates that were missing in the original implementation.