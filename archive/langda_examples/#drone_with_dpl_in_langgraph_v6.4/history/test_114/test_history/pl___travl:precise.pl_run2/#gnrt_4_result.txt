Here are the extracted and formatted code blocks from the <generated_code> that correspond to the <langda> block in the <origin_code>:

```problog
{"HASH": "E09B4F54", "Code": "0.6::inf(X) :- contact(X,Y), inf(Y), \\+susceptible(X).\n0.8::inf(X) :- contact(X,Y), inf(Y), susceptible(X).\n0.2::inf(X) :- riskyTravel(X).\n0.1::inf(X) :- initialInf(X)."}
```

```problog
{"HASH": "E09B4F54", "Code": "inf(X) :- inf_contact(X).\ninf(X) :- inf_travel(X).\ninf(X) :- inf_initial(X).\n\n0.6::inf_contact(X) :- contact(X,Y), inf(Y), \\+susceptible(X).\n0.8::inf_contact(X) :- contact(X,Y), inf(Y), susceptible(X).\n0.2::inf_travel(X) :- riskyTravel(X).\n0.1::inf_initial(X) :- initialInf(X)."}
```

Note that I've used the same HASH value (E09B4F54) for both code blocks since they both relate to the same original <langda> block. The first JSON contains the original rules from the <langda> block, while the second JSON contains the additional implementation that handles cumulative probabilities.