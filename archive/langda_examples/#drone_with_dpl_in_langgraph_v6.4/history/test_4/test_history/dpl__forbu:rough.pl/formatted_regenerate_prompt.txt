System: You are a coding assistant. Use the tools as needed to complete the ProbLog code.
Human: You are an expert programmer proficient in Problog and DeepProbLog. Your task is to regenerate the code in each <langda> block inside <Code>
in each <langda> block, <Report> shows why the <Current_Code> need to be regenerated, please regenerate the code according based on these information.
<Code>
<Langda> Information of 1st Placeholder:
<Current_Code>% Define the append predicate for concatenating lists
append([], L, L).
append([H|T], L, [H|R]) :- append(T, L, R).</Current_Code>
<Report>{'47D659C8': {'HASH': '47D659C8', 'Report': "The provided code block only implements the append/3 predicate for list concatenation, which is a helper function but does not implement the required bubblesort/3 algorithm. The error message indicates that the system cannot find clauses for 'bubblesort/3', which confirms the missing implementation. The append/3 predicate itself is correctly implemented but insufficient for the stated requirements.", 'Need_regenerate': 'true'}}</Report>
<HASH> Hash tag of code: 47D659C8 </HASH>
<LLM> Requirements of Rules: This Prolog program should implement an interpretable bubblesort/3 algorithm. </LLM></Langda>
.
forth_sort(L,L2) :- bubblesort(L,[],L2).
query(forth_sort([3,1,2,5,7,12],X)).
</Code>
<Final_Answer> The generated completed code should be formatted as follows:
// other contents
```problog
//the completed original code here
```
</Final_Answer>


AI: 


In section <origin_code> and <generated_code> you will be give two codes,
- in <origin_code> there's incomplete code with <langda> blocks.
- in <generated_code> there's completed code of <origin_code>.
your task is to extract and format each code block in <generated_code> that corresponds to the <langda> blocks in <origin_code>
<origin_code>
<Langda> Information of 1st Placeholder:
<Current_Code>% Define the append predicate for concatenating lists
append([], L, L).
append([H|T], L, [H|R]) :- append(T, L, R).</Current_Code>
<Report>{'47D659C8': {'HASH': '47D659C8', 'Report': "The provided code block only implements the append/3 predicate for list concatenation, which is a helper function but does not implement the required bubblesort/3 algorithm. The error message indicates that the system cannot find clauses for 'bubblesort/3', which confirms the missing implementation. The append/3 predicate itself is correctly implemented but insufficient for the stated requirements.", 'Need_regenerate': 'true'}}</Report>
<HASH> Hash tag of code: 47D659C8 </HASH>
<LLM> Requirements of Rules: This Prolog program should implement an interpretable bubblesort/3 algorithm. </LLM></Langda>
.
forth_sort(L,L2) :- bubblesort(L,[],L2).
query(forth_sort([3,1,2,5,7,12],X)).
</origin_code>
<generated_code>
% Define the append predicate for concatenating lists
append([], L, L).
append([H|T], L, [H|R]) :- append(T, L, R).

% Implement the bubblesort/3 algorithm
bubblesort([], Acc, Acc).
bubblesort([H|T], Acc, Sorted) :-
    bubble(H, T, NT, Max),
    bubblesort(NT, [Max|Acc], Sorted).

% Helper predicate to perform a single bubble pass
bubble(X, [], [], X).
bubble(X, [Y|T], [X|NT], Max) :-
    X =< Y,
    bubble(Y, T, NT, Max).
bubble(X, [Y|T], [Y|NT], Max) :-
    X > Y,
    bubble(X, T, NT, Max).

% Query to test the bubblesort algorithm
forth_sort(L, L2) :- bubblesort(L, [], L2).
query(forth_sort([3,1,2,5,7,12], X)).
<generated_code>
<Final_Answer> Each code block SHOULD ONLY CONTAINS THE EXACT CONTENT of <langda> blocks, for example:
for the following original code:
<Code>
head(X) :-
<Langda> Information of 1st Placeholder:
<HASH> Hash tag of code: XXXXABCD </HASH>
<LLM> Requirements of Rules:...  </LLM></Langda>
//other contents...
</Code>
if you extracted code contains "head(X) :-", it's wrong, because it's OUTSIDE the <langda> block

For each code block , extract it and format it as follows:
```problog
{"HASH": "XXXX1234","Code": "Completed code snippet 1"}
```
```problog
{"HASH": "XXXX3456","Code": "Completed code snippet 2"}
```
</Final_Answer>