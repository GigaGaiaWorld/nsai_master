Here are the extracted and formatted code blocks from the `<generated_code>` that correspond to the `<langda>` block in the `<origin_code>`:

```problog
{"HASH": "190031BC","Code": "parse([N], N).\nparse(Expr, Result) :-\n    split_lowest_precedence(Expr, Left, Op, Right),\n    parse(Left, LeftResult),\n    parse(Right, RightResult),\n    apply_operator(Op, LeftResult, RightResult, Result)."}
```

```problog
{"HASH": "190031BC","Code": "split_lowest_precedence([N1, Op, N2 | Rest], [N1], Op, [N2 | Rest]) :-\n    lowest_precedence(Op).\nsplit_lowest_precedence([N1, Op1, N2, Op2 | Rest], [N1, Op1 | Left], Op, Right) :-\n    higher_precedence(Op1, Op2),\n    split_lowest_precedence([N2, Op2 | Rest], Left, Op, Right)."}
```

```problog
{"HASH": "190031BC","Code": "lowest_precedence('+').\nlowest_precedence('-').\nhigher_precedence('*', '+').\nhigher_precedence('*', '-').\nhigher_precedence('/', '+').\nhigher_precedence('/', '-')."}
```

```problog
{"HASH": "190031BC","Code": "apply_operator('+', L, R, Result) :- Result is L + R.\napply_operator('-', L, R, Result) :- Result is L - R.\napply_operator('*', L, R, Result) :- Result is L * R.\napply_operator('/', L, R, Result) :- Result is L / R."}
```