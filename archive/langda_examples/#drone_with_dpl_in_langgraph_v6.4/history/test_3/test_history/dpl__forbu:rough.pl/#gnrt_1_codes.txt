[
{
"47D659C8": "% DeepProbLog compatible interpretable bubblesort algorithm\n\n% Main sorting predicate\nbubblesort([], Acc, Acc).\nbubblesort(L, Acc, Sorted) :-\n    bubble_pass(L, L1, Changed),\n    (Changed == true ->\n        bubblesort(L1, Acc, Sorted)\n    ;\n        append(Acc, L1, Sorted)\n    ).\n\n% Single pass of bubble sort\nbubble_pass([X,Y|T], [Y|Rest], true) :-\n    X > Y,\n    bubble_pass([X|T], Rest, _).\nbubble_pass([X,Y|T], [X|Rest], Changed) :-\n    X =< Y,\n    bubble_pass([Y|T], Rest, Changed).\nbubble_pass([X], [X], false).\nbubble_pass([], [], false).\n\n% Helper predicate for list concatenation\nappend([], L, L).\nappend([H|T], L, [H|R]) :- append(T, L, R).\n\n% Wrapper predicate for DeepProbLog queries\nforth_sort(L, L2) :- bubblesort(L, [], L2).\n\n% Probabilistic facts (dummy example for DeepProbLog)\n0.5::dummy.\n\n% Query example for DeepProbLog\nquery(forth_sort([3,1,2,5,7,12], _))."
}
]