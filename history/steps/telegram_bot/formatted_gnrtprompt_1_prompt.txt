System: You are an expert programmer proficient in Problog and DeepProbLog. You could use the available tools to complete the task. You should always use 'get_report_tool' first to gain more information.
Human: Your task is to regenerate the code in each <langda> block inside <Regenerate_format>

<Regenerate_format>
% Earth constant: R * π / 180 -> 111194.93 meters/degree
user_location(8.65639, 49.87500).
special_zone_location(8.65639, 49.87500).
relative_offset(EastOffset, NorthOffset) :-
<Langda> Information:
<HASH> Hash tag of code: 9AE7BB23 </HASH>
<Requirements>The location of the danger zone relative to the user, in meters, calculated based on user_location and special_zone_location above
The conversion of longitude should take into account the influence of latitude </Requirements></Langda>
.
query(user_location(_,_)).
query(relative_offset(_,_)).
<Regenerate_format>

<Regenerate_Instructions>
1. In <Regenerate_format> you will see the code template format to be followed, and the <langda> block in the template marks the part that needs to be completed.
2. Your task is to generate and output the complete Problog/DeepProbLog code according to the user's specific requirements for each <langda> block. The new code should fix the error in previous code.
</Regenerate_Instructions>

<Final_Answer> The generated completed code should be formatted as follows:
// other contents
```problog
//the completed code here
```
</Final_Answer>


AI: 

**split**


In section <origin_code> and <generated_code> you will be give two codes,
- in <origin_code> there's incomplete code with <langda> blocks.
- in <generated_code> there's completed code of <origin_code>.
your task is to extract and format each code block in <generated_code> that corresponds to the <langda> blocks in <origin_code>
<origin_code>

% Earth constant: R * π / 180 -> 111194.93 meters/degree
user_location(8.65639, 49.87500).
special_zone_location(8.65639, 49.87500).
relative_offset(EastOffset, NorthOffset) :-
<Langda> Information:
<HASH> Hash tag of code: 9AE7BB23 </HASH>
<Requirements>The location of the danger zone relative to the user, in meters, calculated based on user_location and special_zone_location above
The conversion of longitude should take into account the influence of latitude </Requirements></Langda>
.
query(user_location(_,_)).
query(relative_offset(_,_)).

</origin_code>
<generated_code>

% Earth constant: R * π / 180 -> 111194.93 meters/degree
user_location(8.65639, 49.87500).
special_zone_location(8.65639, 49.87500).

relative_offset(EastOffset, NorthOffset) :-
    user_location(UserLon, UserLat),
    special_zone_location(ZoneLon, ZoneLat),
    % Calculate the difference in latitude and longitude in degrees
    DeltaLat is ZoneLat - UserLat,
    DeltaLon is ZoneLon - UserLon,
    % Convert latitude difference to meters (constant for all latitudes)
    NorthOffset is DeltaLat * 111194.93,
    % Convert longitude difference to meters (adjusted for latitude)
    EastOffset is DeltaLon * 111194.93 * cos(UserLat * pi / 180).

query(user_location(_, _)).
query(relative_offset(_, _)).

<generated_code>
<Final_Answer> 
For each code block, extract it and format it in the following JSON format, please remove all code comments:

```problog
{"HASH": "XXXX1234","Code": "Completed code snippet 1"}
```
```problog
{"HASH": "XXXX3456","Code": "Completed code snippet 2"}
```

If there's no corresponding code exist:
```problog
{"HASH": "XXXX7890","Code": ""}
```
</Final_Answer>