```problog
{"HASH": "6FC0DF89","Code": "density(Country, Density) :- pop(Country, Pop), area(Country, Area), Density is (Pop / Area).\n\nquery_pop([Country1,Density1,Country2,Density2]) :-\n    density(Country1, Density1),\n    density(Country2, Density2),\n    Country1 @< Country2,  % avoid duplicate pairs and same country\n    abs(Density1 - Density2) =< 0.05 * max(Density1, Density2)."}
```

The solution defines:
1. A `density/2` predicate that calculates population density by dividing population by area
2. The `query_pop/1` predicate that:
   - Gets densities for two different countries (using `@<` to avoid duplicates and self-comparisons)
   - Checks if their densities differ by no more than 5% of the larger density
   - Returns the country names and their densities in the output list