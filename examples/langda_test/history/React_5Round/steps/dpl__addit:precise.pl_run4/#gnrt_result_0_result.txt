Here are the completed code segments for the `<langda>` blocks:

```problog
{"HASH": "EE740747", "Code": "number([Img|Imgs], Acc, Result) :- digit(Img, Nr), NewAcc is Acc * 10 + Nr, number(Imgs, NewAcc, Result)."}
```

```problog
{"HASH": "51EB0349", "Code": "multi_addition(X, Y, Z) :- number(X, 0, XNum), number(Y, 0, YNum), Z is XNum + YNum."}
```

### Explanation:
1. **`number/3`**:
   - Recursively processes the list of images (`[Img|Imgs]`).
   - For each image, looks up its digit value (`digit(Img, Nr)`).
   - Computes the new accumulated value by shifting the current `Acc` left (multiplying by 10) and adding `Nr`.
   - Continues processing the remaining images (`Imgs`) with the new accumulator (`NewAcc`).

2. **`multi_addition/3`**:
   - Converts both input lists (`X` and `Y`) to numbers using `number/3` with an initial accumulator of `0`.
   - Sums the two numbers (`XNum + YNum`) and binds the result to `Z`.

This satisfies the requirements of parsing image lists into numbers and performing addition.