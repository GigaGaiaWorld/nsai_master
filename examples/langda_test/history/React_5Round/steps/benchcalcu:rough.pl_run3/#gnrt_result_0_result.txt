```problog
{"HASH": "35747D5A","Code": "leftdigit(A), leftdigit(C), digit(B), digit(D), digit(E), all_different([A,B,C,D,E]),\n    % Units place: B + D = E (with possible carry)\n    sumdigit(0, B, D, E, C1),\n    % Tens place: A + C = D (with carry from units)\n    sumdigit(C1, A, C, D, C2),\n    % Hundreds place: 0 + B = C (with carry from tens)\n    sumdigit(C2, 0, B, C, _)."}
```

### Explanation:
- `leftdigit(A), leftdigit(C)`: Ensures `A` and `C` are not zero.
- `digit(B), digit(D), digit(E)`: Ensures `B`, `D`, `E` are valid digits.
- `all_different([A,B,C,D,E])`: Ensures all letters have unique digits.
- **Column-wise Addition**:
  - **Units place**: `B + D = E` (with no initial carry, `C1` is the output carry).
  - **Tens place**: `A + C + C1 = D` (with `C1` as input carry, `C2` as output carry).
  - **Hundreds place**: `0 + B + C2 = C` (since `AB` has no hundreds digit, we use `0`). The final carry is ignored (`_`).

This ensures the equation `AB + BCD = CDE` holds under the given constraints.