System: You are a coding assistant. You should use the available tools to complete the task.
Human: You are an expert programmer proficient in Problog and DeepProbLog. Your task is to generate the complete code based on the user's requirements in each <langda> block.
<Code>

% -------------------------
% Basic rules of rock-paper-scissors
% -------------------------
% Three gestures
move(rock).
move(paper).
move(scissor).
% Win-lose relationship: X beats Y
beats(rock, scissor).
beats(scissor, paper).
beats(paper, rock).
% -------------------------
% Calculate the result of the game
% -------------------------
<Langda> Information:
<HASH> Hash tag of code: CFA63C1E </HASH>
<Requirements>please define the game rules of rock-paper-scissors. </Requirements></Langda>
.
compute_score([], 0).
compute_score([win | Rs], S) :- compute_score(Rs, S1), S is S1 + 1.
compute_score([lose | Rs], S) :- compute_score(Rs, S1), S is S1 - 1.
compute_score([draw | Rs], S) :- compute_score(Rs, S1), S is S1.
determine_winner(P1Moves,P2Moves,Winner) :- 
play(P1Moves,P2Moves,Results), 
compute_score(Results,S), 
( S > 0, Winner = player1 
; S < 0, Winner = player2 
; S = 0, Winner = draw 
).
query(determine_winner([rock,rock,rock],[paper,paper,scissor],W)).

</Code>

<Final_Answer> The generated completed code should be formatted as follows:
// other contents
```problog
//the completed original code here
```
</Final_Answer>


AI: 

**split**


In section <origin_code> and <generated_code> you will be give two codes,
- in <origin_code> there's incomplete code with <langda> blocks.
- in <generated_code> there's completed code of <origin_code>.
your task is to extract and format each code block in <generated_code> that corresponds to the <langda> blocks in <origin_code>
<origin_code>

% -------------------------
% Basic rules of rock-paper-scissors
% -------------------------
% Three gestures
move(rock).
move(paper).
move(scissor).
% Win-lose relationship: X beats Y
beats(rock, scissor).
beats(scissor, paper).
beats(paper, rock).
% -------------------------
% Calculate the result of the game
% -------------------------
<Langda> Information:
<HASH> Hash tag of code: CFA63C1E </HASH>
<Requirements>please define the game rules of rock-paper-scissors. </Requirements></Langda>
.
compute_score([], 0).
compute_score([win | Rs], S) :- compute_score(Rs, S1), S is S1 + 1.
compute_score([lose | Rs], S) :- compute_score(Rs, S1), S is S1 - 1.
compute_score([draw | Rs], S) :- compute_score(Rs, S1), S is S1.
determine_winner(P1Moves,P2Moves,Winner) :- 
play(P1Moves,P2Moves,Results), 
compute_score(Results,S), 
( S > 0, Winner = player1 
; S < 0, Winner = player2 
; S = 0, Winner = draw 
).
query(determine_winner([rock,rock,rock],[paper,paper,scissor],W)).

</origin_code>
<generated_code>

% -------------------------
% Basic rules of rock-paper-scissors
% -------------------------
% Three gestures
move(rock).
move(paper).
move(scissor).

% Win-lose relationship: X beats Y
beats(rock, scissor).
beats(scissor, paper).
beats(paper, rock).

% -------------------------
% Game outcome rules
% -------------------------
outcome(P1, P2, win) :- beats(P1, P2).
outcome(P1, P2, lose) :- beats(P2, P1).
outcome(P, P, draw).

% -------------------------
% Play a series of moves
% -------------------------
play([], [], []).
play([P1|P1s], [P2|P2s], [R|Rs]) :-
    outcome(P1, P2, R),
    play(P1s, P2s, Rs).

% -------------------------
% Calculate the result of the game
% -------------------------
compute_score([], 0).
compute_score([win | Rs], S) :- compute_score(Rs, S1), S is S1 + 1.
compute_score([lose | Rs], S) :- compute_score(Rs, S1), S is S1 - 1.
compute_score([draw | Rs], S) :- compute_score(Rs, S1), S is S1.

determine_winner(P1Moves,P2Moves,Winner) :- 
    play(P1Moves,P2Moves,Results), 
    compute_score(Results,S), 
    ( S > 0, Winner = player1 
    ; S < 0, Winner = player2 
    ; S = 0, Winner = draw 
    ).

% Example query
query(determine_winner([rock,rock,rock],[paper,paper,scissor],W)).

<generated_code>
<Final_Answer>
For each code block, extract it and format it in the following JSON format, please remove all code comments:

```problog
{"HASH": "XXXX1234","Code": "Completed code snippet 1"}
```
```problog
{"HASH": "XXXX3456","Code": "Completed code snippet 2"}
```

If there's no corresponding code exist:
```problog
{"HASH": "XXXX7890","Code": ""}
```
</Final_Answer>