```problog
{"HASH": "5E40E418","Code": "stack_op(push(X), Stack, [X | Stack]).\nstack_op(pop, [X | Stack], Stack).\nstack_op(dup, [X | Stack], [X, X | Stack]).\nstack_op(swap, [X, Y | Stack], [Y, X | Stack]).\nstack_op(over, [X, Y | Stack], [Y, X, Y | Stack]).\nstack_op(rot, [X, Y, Z | Stack], [Y, Z, X | Stack]).\nstack_op(sort, Stack, SortedStack) :-\n    is_list(Stack),\n    length(Stack, Len),\n    Len >= 3,\n    get_top_n(Stack, 3, Elements, RestStack),\n    quick_sort(Elements, SortedElements),\n    append(SortedElements, RestStack, SortedStack).\n\nget_top_n(Stack, N, Elements, Rest) :-\n    length(Elements, N),\n    append(Elements, Rest, Stack).\n\nquick_sort([], []).\nquick_sort([Pivot | Tail], Sorted) :-\n    partition(Tail, Pivot, Left, Right),\n    quick_sort(Left, SortedLeft),\n    quick_sort(Right, SortedRight),\n    append(SortedLeft, [Pivot | SortedRight], Sorted).\n\npartition([], _, [], []).\npartition([X | Tail], Pivot, [X | Left], Right) :-\n    X =< Pivot,\n    partition(Tail, Pivot, Left, Right).\npartition([X | Tail], Pivot, Left, [X | Right]) :-\n    X > Pivot,\n    partition(Tail, Pivot, Left, Right)."}
```