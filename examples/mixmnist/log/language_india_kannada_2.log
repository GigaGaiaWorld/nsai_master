#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "arabic_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "telugu_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "kannada_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "urdu_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": "nn(arabic_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::arabic_digit(X,Y).\nnn(telugu_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::telugu_digit(X,Y).\nnn(kannada_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::kannada_digit(X,Y).\nnn(urdu_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::urdu_digit(X,Y).\nnumber([],Result,Result).\nnumber([H | T],Acc,Result) :- kannada_digit(H,Nr), Acc2 is Nr+10*Acc, number(T,Acc2,Result).\nnumber(X,Y) :- number(X,0,Y).\nanomaly_detection(Digit1,Digit2,1) :- number(Digit1,Current1), number(Digit2,Current2), Sum is Current1+Current2, Sum>150.\nanomaly_detection(Digit1,Digit2,0) :- \\+anomaly_detection(Digit1,Digit2,1).\n"}
#Accuracy 0.8795
i,time,loss,ground_time,compile_time,eval_time
100,6.746984958648682,0.2433363017439842,0.8284773659706116,0.73062659740448,0.03879618883132935
200,10.730709552764893,0.3873255407810211,0.8357895708084107,0.6897285938262939,0.036697204113006594
300,15.026150703430176,0.3669231027364731,0.8359417819976807,0.6966856956481934,0.039148766994476315
400,19.21393895149231,0.4691982579231262,0.8351807260513305,0.6619001865386963,0.038075127601623536
500,23.32562279701233,0.44857977487146855,0.8353329372406005,0.6688572883605957,0.0377730655670166
600,27.65139365196228,0.3877645386010408,0.8357895708084107,0.6897285938262939,0.03943333387374878
700,31.721303701400757,0.3871739477664232,0.8357895708084107,0.6897285938262939,0.037274725437164306
800,35.756611824035645,0.4079112634807825,0.8356373596191407,0.6827714920043946,0.03697845935821533
900,40.00010275840759,0.32618935652077197,0.8362462043762207,0.7105998992919922,0.03846364974975586
1000,44.671817779541016,0.326321724653244,0.8362462043762207,0.7105998992919922,0.043571176528930666
1100,48.79653477668762,0.3055533243715763,0.8363984155654908,0.7175570011138916,0.037989790439605715
1200,52.71238660812378,0.3465421044081449,0.8360939931869507,0.7036427974700927,0.03625452756881714
1300,56.719143867492676,0.24448133565485478,0.8368550491333008,0.7384283065795898,0.0370890212059021
1400,60.64001274108887,0.2651185576617718,0.8367028379440308,0.7314712047576905,0.03637359380722046
1500,64.55413889884949,0.4482389980554581,0.8353329372406005,0.6688572883605957,0.036212546825408934
1600,68.46195483207703,0.40766411639750005,0.8356373596191407,0.6827714920043946,0.0359601092338562
1700,72.39535784721375,0.4279440500587225,0.8354851484298706,0.6758143901824951,0.036441142559051516
1800,76.31557559967041,0.3057315542548895,0.8363984155654908,0.7175570011138916,0.036233534812927244
1900,80.19764375686646,0.38717749699950216,0.8357895708084107,0.6897285938262939,0.035926945209503174
2000,84.60009288787842,0.44862810753285887,0.8353329372406005,0.6688572883605957,0.04111571073532105