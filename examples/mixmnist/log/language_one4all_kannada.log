#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "arabic_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0005\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "telugu_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0005\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "kannada_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0005\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "urdu_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0005\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": "nn(arabic_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::arabic_digit(X,Y).\nnn(telugu_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::telugu_digit(X,Y).\nnn(kannada_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::kannada_digit(X,Y).\nnumber([],Result,Result).\nnumber([H | T],Acc,Result) :- kannada_digit(H,Nr), Acc2 is Nr+10*Acc, number(T,Acc2,Result).\nnumber(X,Y) :- number(X,0,Y).\nanomaly_detection(Digit1,Digit2,1) :- number(Digit1,Current1), number(Digit2,Current2), Sum is Current1+Current2, Sum>120.\nanomaly_detection(Digit1,Digit2,0) :- \\+anomaly_detection(Digit1,Digit2,1).\n"}
#Accuracy 0.755
i,time,loss,ground_time,compile_time,eval_time
100,6.237792253494263,0.559055263735354,0.7748786473274231,0.4574116539955139,0.03628257274627686
200,10.276128053665161,0.5659994605183601,0.7831200361251831,0.4496285915374756,0.03659186601638794
300,14.154329061508179,0.6115291914343834,0.7838658332824707,0.42730250358581545,0.03551044940948486
400,18.252444982528687,0.6775006347894669,0.7850591087341309,0.3915807628631592,0.037279696464538575
500,22.126967906951904,0.6194693928956986,0.7840149927139283,0.4228372859954834,0.03536863327026367
600,25.993081092834473,0.5947381880879402,0.7838658332824707,0.42730250358581545,0.035556633472442624
700,29.84814715385437,0.5261500898469239,0.7841641521453857,0.41837206840515134,0.03531168222427368
800,34.028486013412476,0.39518289763946085,0.7850591087341309,0.3915807628631592,0.0375640606880188
900,38.03710913658142,0.42310057003051044,0.7826725578308106,0.46302424430847167,0.03633155345916748
1000,42.001511096954346,0.31455807042075323,0.7831200361251831,0.4496285915374756,0.03581154108047485
1100,45.90301203727722,0.34612270744662965,0.7838658332824707,0.42730250358581545,0.03522754907608032
1200,49.769705057144165,0.3598299895529635,0.7850591087341309,0.3915807628631592,0.03471555948257446
1300,54.00050902366638,0.3176628343941411,0.7840149927139283,0.4228372859954834,0.03792041301727295
1400,57.965518951416016,0.2886087016755482,0.7838658332824707,0.42730250358581545,0.03593786954879761
1500,61.84775686264038,0.2738474926330673,0.7841641521453857,0.41837206840515134,0.03518290042877197
1600,65.66803812980652,0.2004054825772346,0.7850591087341309,0.3915807628631592,0.03468292236328125
1700,69.71259617805481,0.3010229876903213,0.7826725578308106,0.46302424430847167,0.03710038661956787
1800,73.6130359172821,0.22039562896899043,0.7831200361251831,0.4496285915374756,0.035478429794311525
1900,77.55678105354309,0.22540706519025214,0.7838658332824707,0.42730250358581545,0.03530329704284668
2000,81.85452795028687,0.23647939599950404,0.7850591087341309,0.3915807628631592,0.03841675043106079
2100,86.08427000045776,0.25990388747169163,0.7840149927139283,0.4228372859954834,0.037430360317230224
2200,90.43360900878906,0.22717050494914473,0.7838658332824707,0.42730250358581545,0.039337728023529056
2300,94.41184186935425,0.23163191698460195,0.7841641521453857,0.41837206840515134,0.03574124336242676
2400,98.13982200622559,0.15466976619656406,0.7850591087341309,0.3915807628631592,0.03403481483459472
2500,101.83578681945801,0.23240240934136408,0.7826725578308106,0.46302424430847167,0.033688349723815916
2600,105.71590304374695,0.16514258566942316,0.7831200361251831,0.4496285915374756,0.03570216655731201
2700,109.30481386184692,0.1425802747353049,0.7838658332824707,0.42730250358581545,0.03269176483154297
2800,112.95150804519653,0.1845668875734009,0.7850591087341309,0.3915807628631592,0.033300976753234866
2900,116.74288606643677,0.21349747974644515,0.7840149927139283,0.4228372859954834,0.034471163749694826
3000,121.32101607322693,0.18590721951721662,0.7838658332824707,0.42730250358581545,0.04168391942977905
3100,125.33302211761475,0.16897204464237348,0.7841641521453857,0.41837206840515134,0.03597564935684204
3200,129.15854406356812,0.12378164281398654,0.7850591087341309,0.3915807628631592,0.034205570220947265
3300,133.30155396461487,0.1932479580498409,0.7826725578308106,0.46302424430847167,0.03645555019378662
3400,137.02030515670776,0.10882512561365842,0.7831200361251831,0.4496285915374756,0.03336382865905762
3500,140.92371702194214,0.1210117243113075,0.7838658332824707,0.42730250358581545,0.035329234600067136
3600,144.39274787902832,0.1285893581682153,0.7850591087341309,0.3915807628631592,0.03156575679779053
3700,147.91505002975464,0.15718361203004477,0.7840149927139283,0.4228372859954834,0.032302706241607665
3800,151.26532101631165,0.10493859460840689,0.7838658332824707,0.42730250358581545,0.030991716384887694
3900,154.58994698524475,0.10339893597625505,0.7841641521453857,0.41837206840515134,0.030429298877716063
4000,158.1659071445465,0.09031401704686132,0.7850591087341309,0.3915807628631592,0.03246884822845459