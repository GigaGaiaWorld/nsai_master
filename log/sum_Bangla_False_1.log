#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "arabic_net", "module": "MNIST_Net(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": "nn(arabic_net,[X],Y,[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])::arabic_digit(X,Y).\noperation(X,Y,Z) :- arabic_digit(X,DigitX), arabic_digit(Y,DigitY), Z is DigitX+DigitY.\n"}
#Accuracy 0.8716666666666667
i,time,loss,ground_time,compile_time,eval_time
100,1.763249158859253,2.7511736166477205,0.00712419867515564,0.00845281958580017,0.0057238352298736575
200,3.0994369983673096,2.7373784339427947,0.007201635837554931,0.0072219383716583254,0.00525776743888855
300,4.437901973724365,2.4498725825548173,0.007188043594360352,0.008923183679580688,0.005371326208114624
400,5.745020151138306,2.5551454022526743,0.007267794609069824,0.007807472944259644,0.005313938856124878
500,7.068115234375,2.2925562052428723,0.00718990683555603,0.0059574639797210695,0.005265207290649414
600,8.488789081573486,1.9989371252804995,0.00715823769569397,0.007695742845535278,0.005489398241043091
700,9.953204870223999,1.5049611875228583,0.007215771675109863,0.006479815244674682,0.00527715802192688
800,11.311293125152588,1.0495929516179603,0.007156763076782226,0.008744326829910278,0.005024211406707764
900,12.614068269729614,0.8888541033479851,0.007130478620529175,0.0076672804355621335,0.004926544427871704
1000,13.881228923797607,0.7472198379278416,0.007104066610336304,0.006472779512405396,0.0047660088539123536
1100,15.169517040252686,0.8524208682205062,0.007202848196029663,0.008006213903427125,0.004934808015823364
1200,16.65485906600952,0.6560653597197961,0.007127387523651123,0.009427443742752076,0.005362678766250611
1300,18.028501987457275,0.5359387903509923,0.007194232940673828,0.00849804162979126,0.004906070232391357
1400,19.241562128067017,0.6293029254028807,0.007201635837554931,0.0072219383716583254,0.004701547622680664
1500,20.46436595916748,0.4573681241180384,0.007188043594360352,0.008923183679580688,0.0046914291381835935
1600,21.727516174316406,0.4515373478480615,0.007267794609069824,0.007807472944259644,0.004727104902267456
1700,23.059603214263916,0.35120274075386987,0.00718990683555603,0.0059574639797210695,0.004898228645324707
1800,24.50488591194153,0.41397679746794436,0.00715823769569397,0.007695742845535278,0.004489783048629761
1900,25.78108787536621,0.33412530152958786,0.007215771675109863,0.006479815244674682,0.004433367252349853
2000,27.09316396713257,0.3262423434495213,0.007156763076782226,0.008744326829910278,0.00480060338973999
2100,28.30286717414856,0.4539202709698366,0.007130478620529175,0.0076672804355621335,0.004498381614685059
2200,29.383262157440186,0.32864167591512755,0.007104066610336304,0.006472779512405396,0.004165204763412475
2300,30.566967964172363,0.44682307497788315,0.007202848196029663,0.008006213903427125,0.004512100219726562
2400,31.71104621887207,0.30452640652059926,0.007127387523651123,0.009427443742752076,0.004429538249969483